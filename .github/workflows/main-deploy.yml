name: Build Main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - name: Checkout Build
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install --quiet

      - name: Build Project
        run: yarn build

      - name: Deploy GH Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GitHub_Actions }}
          publish_dir: dist/lti-mini-erp-comercial
          enable_jekyll: false
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout Release
        uses: actions/checkout@v4
      # - name: Create release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "release.tar.gz,foo/*.txt"
      #     bodyFile: "body.md"
      # - name: Create release
      #   uses: Roang-zero1/github-create-release-action@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GitHub_Actions }}
      # - name: Upload release artifacts
      #   uses: Roang-zero1/github-upload-release-artifacts-action@v2
      #   with:
      #     args: "dist/bin/ dist/shell/compiled.sh"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GitHub_Actions }}
permissions:
  contents: write
